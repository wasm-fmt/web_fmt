name: Test

on:
    push:
        branches:
            - "*"
    pull_request:
        types: ["opened", "reopened", "synchronize"]

env:
    CARGO_INCREMENTAL: 0
    CARGO_TERM_COLOR: "always"
    DIFF: 0
    RUST_LOG: "off"

jobs:
    cargo-fmt:
        name: Cargo fmt
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - run: cargo fmt -- --check

    cargo-clippy:
        name: Cargo clippy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - run: cargo clippy

    cargo-test:
        name: Cargo test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - run: cargo check
            - run: cargo test

    wasm-build:
        name: Wasm build
        runs-on: ubuntu-latest
        strategy:
            matrix:
                crate: ["biome_fmt", "web_fmt"]
        steps:
            - uses: actions/checkout@v4

            - name: Install wasm-pack
              run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

            - name: Build ${{matrix.crate}} wasm
              run: |
                  ./crates/${{ matrix.crate }}/scripts/build.sh

            - name: Package ${{matrix.crate}}
              working-directory: crates/${{matrix.crate}}/pkg
              run: npm pack

            - name: Upload ${{matrix.crate}}
              uses: actions/upload-artifact@v4
              with:
                  name: ${{matrix.crate}}
                  path: |
                      crates/${{matrix.crate}}/pkg
                      # To keep the pkg directory structure
                      crates/${{matrix.crate}}/README.md

    node-test:
        runs-on: ubuntu-latest
        needs: wasm-build
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v5
              with:
                  path: crates

            - uses: actions/setup-node@v4
              with:
                  node-version-file: ".node-version"

            - run: node --test crates/**/test_node/*.mjs

    deno-test:
        runs-on: ubuntu-latest
        needs: wasm-build
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v5
              with:
                  path: crates

            - uses: denoland/setup-deno@v1
              with:
                  deno-version: v1.x

            - run: deno test --allow-read --parallel "crates/**/test_deno/*"

    bun-test:
        runs-on: ubuntu-latest
        needs: wasm-build
        continue-on-error: true
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v5
              with:
                  path: crates

            - uses: oven-sh/setup-bun@v2
              name: Install bun

            - run: bun test test_bun
